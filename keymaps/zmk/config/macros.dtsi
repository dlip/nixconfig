#define str(s) #s
#define MACRO(NAME, BINDINGS) \
  macro_##NAME: macro_##NAME { \
      compatible = "zmk,behavior-macro"; \
      label = str(macro_##NAME); \
      #binding-cells = <0>; \
      wait-ms = <0>; \
      tap-ms = <10>; \
      bindings = <BINDINGS>; \
  };

MACRO(m_a, &kp A &kp SPACE)
MACRO(m_I, &sk LSHIFT &kp I &kp SPACE)
MACRO(m_an, &kp A &kp N &kp SPACE)
MACRO(m_as, &kp A &kp S &kp SPACE)
MACRO(m_at, &kp A &kp T &kp SPACE)
MACRO(m_be, &kp B &kp E &kp SPACE)
MACRO(m_bi, &kp B &kp I &kp SPACE)
MACRO(m_by, &kp B &kp Y &kp SPACE)
MACRO(m_do, &kp D &kp O &kp SPACE)
MACRO(m_ex, &kp E &kp X &kp SPACE)
MACRO(m_go, &kp G &kp O &kp SPACE)
MACRO(m_he, &kp H &kp E &kp SPACE)
MACRO(m_hi, &kp H &kp I &kp SPACE)
MACRO(m_if, &kp I &kp F &kp SPACE)
MACRO(m_in, &kp I &kp N &kp SPACE)
MACRO(m_is, &kp I &kp S &kp SPACE)
MACRO(m_it, &kp I &kp T &kp SPACE)
MACRO(m_me, &kp M &kp E &kp SPACE)
MACRO(m_my, &kp M &kp Y &kp SPACE)
MACRO(m_no, &kp N &kp O &kp SPACE)
MACRO(m_of, &kp O &kp F &kp SPACE)
MACRO(m_OK, &sk LSHIFT &kp O &sk LSHIFT &kp K &kp SPACE)
MACRO(m_on, &kp O &kp N &kp SPACE)
MACRO(m_or, &kp O &kp R &kp SPACE)
MACRO(m_so, &kp S &kp O &kp SPACE)
MACRO(m_to, &kp T &kp O &kp SPACE)
MACRO(m_up, &kp U &kp P &kp SPACE)
MACRO(m_us, &kp U &kp S &kp SPACE)
MACRO(m_we, &kp W &kp E &kp SPACE)
MACRO(m_all, &kp A &kp L &kp L &kp SPACE)
