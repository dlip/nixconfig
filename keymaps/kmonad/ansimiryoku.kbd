(defcfg
  ;; ** For Linux **
  ;;input  (device-file "/dev/input/by-path/platform-i8042-serio-0-event-kbd")
  input  (device-file "/dev/input/by-id/usb-foostan_Corne-event-kbd")
  ;; input  (device-file "/dev/input/by-id/usb-Matias_Ergo_Pro_Keyboard-event-kbd")
  output (uinput-sink "KMonad output")

  ;; ** For Windows **
  ;; input  (low-level-hook)
  ;; output (send-event-sink)

  ;; ** For MacOS **
  ;; input  (iokit-name "my-keyboard-product-string")
  ;; output (kext)

  fallthrough true
)

(defsrc
  esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           spc            ralt rctl lft  rctl
)

(defalias
;; idea separate layers for shift ctrl to avoid rolls
;; https://configure.zsa.io/ergodox-ez/layouts/Malb/latest/0
  a (tap-hold-next-release 200 a lmet)
  r (tap-hold-next-release 200 r lalt)
  s (tap-hold-next-release 200 s lctl)
  t (tap-hold-next-release 200 t lsft)

  n (tap-hold-next-release 200 n rsft)
  e (tap-hold-next-release 200 e rctl)
  i (tap-hold-next-release 200 i ralt)
  o (tap-hold-next-release 200 o rmet)


  del (tap-hold-next-release 200 del (layer-toggle fun))
  bsp (tap-hold-next-release 200 bspc (layer-toggle num))
  tab (tap-hold-next-release 200 tab (layer-toggle sym))

  ret (tap-hold-next-release 200 ret (layer-toggle med))
  spc (tap-hold-next-release 200 spc (layer-toggle nav))
  esc (tap-hold-next-release 200 esc (layer-toggle mse))
)

(deflayer colemak-dh
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  q    w    f    p    b    _    _    j    l    u    y    '    _    _
  @a   @r   @s   @t   g    _    _    m    @n   @e   @i   @o   _
  z    x    c    d    v    _    _    k    h    ,    .    /
  _    @del @bsp @tab                     @ret @spc @esc _
)

(defalias


  cpy C-c
  pst C-v
  cut C-x
  udo C-z
  rdo C-y

  bk A-left
  fwd A-right
)

(defalias
  p pause
)

(deflayer fun
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    prnt f7   f8   f9   f10  _    _
  lmet lalt lctl lsft _    _    _    slck f4   f5   f6   f11  _
  _    _    _    _    _    _    _    @p   f1   f2   f3   f12
  _    _    _    _                        ret  spc  cmp  _
)

(deflayer num
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    [    7    8    9    ]    _    _
  lmet lalt lctl lsft _    _    _    =    4    5    6    ;    _
  @udo @cut @cpy @pst @rdo _    _    \    1    2    3    `
  _    _    _    _                        -    0    .    _
)

(deflayer sym
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    {    &    *    \(   }    _    _
  lmet lalt lctl lsft _    _    _    +    $    %    ^    :    _
  _    _    _    _    _    _    _    |    !    @    #    ~
  _    _    _    _                        \_   \(   \)   _
)

(defalias
  rw rewind
  ff fastforward
)


(deflayer med
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    volu _    _    _    _    _    _    _    _    _    _    _
  _   prev  vold next _    _    _    _    rsft rctl ralt rmet _
  _    _    _    _    _    _    _    _    _    _    _    _
  _    mute pp   stop                     _    _    _    _
)

(deflayer nav
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  pgup home up   end  ins  _    _    _    _    _    _    _    _    _
  pgdn lft  down rght caps _    _    _    rsft rctl ralt rmet _
  @udo @cut @cpy @pst @rdo _    _    _    _    _    _    _
  _    del  bspc tab                      _    _    _    _
)

(deflayer mse
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  pgup home up   end  ins  _    _    _    _    _    _    _    _    _
  pgdn lft  down rght caps _    _    _    rsft rctl ralt rmet _
  @udo @cut @cpy @pst @rdo _    _    _    _    _    _    _
  _    del  bspc tab                      _    _    _    _
)




(deflayer empty
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _              _              _    _    _    _
)