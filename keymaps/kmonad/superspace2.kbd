(defcfg
  ;; ** For Linux **
  input  (device-file "/dev/input/by-path/platform-i8042-serio-0-event-kbd")
  ;;input  (device-file "/dev/input/by-id/usb-foostan_Corne-event-kbd")
  ;;input  (device-file "/dev/input/by-id/usb-foostan_Corne_vial:f64c2b3c-event-kbd")
  ;; input  (device-file "/dev/input/by-id/usb-Matias_Ergo_Pro_Keyboard-event-kbd")
  output (uinput-sink "KMonad output")

  ;; ** For Windows **
  ;; input  (low-level-hook)
  ;; output (send-event-sink)

  ;; ** For MacOS **
  ;; input  (iokit-name "my-keyboard-product-string")
  ;; output (kext)

  fallthrough true
)

(defsrc
  esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           spc            ralt rctl cmp  rctl
)

(defalias
  esc (tap-hold-next-release 200 esc (layer-toggle navnum))
  ret (tap-hold-next-release 200 ret (layer-toggle medfn))

  r (tap-hold-next-release 200 r lmet)
  s (tap-hold-next-release 200 s lctl)
  t (tap-hold-next-release 200 t lalt)

  n (tap-hold-next-release 200 n lalt)
  e (tap-hold-next-release 200 e rctl)
  i (tap-hold-next-release 200 i rmet)

  spc (tap-hold-next-release 200 spc lsft)
)

(deflayer colemak-dh
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  tab  q    w    f    p   b    j    l    u    y    ;    \    _    _
  bspc a    @r   @s   @t   g    m   @n   @e   @i    o   del  _
  grv  z    x    c    d   v    k    h    ,    .    '    /
  _    [    @esc           @spc          @ret ]    ]    _
)

(defalias
  bk A-left
  fwd A-right

  und C-z
  cut C-x
  cp C-c
  pst C-v

  lft (tap-hold-next-release 200 lft lmet)
  dwn (tap-hold-next-release 200 down lctl)
  rht (tap-hold-next-release 200 rght lalt)

  4 (tap-hold-next-release 200 4 lalt)
  5 (tap-hold-next-release 200 5 rctl)
  6 (tap-hold-next-release 200 6 rmet)
)

(deflayer navnum
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    @fwd home up   end  pgup +    7    8    9    *    _    _    _
  _    @bk  @lft @dwn @rht pgdn =    @4   @5   @6   0    _    _
  _    @und @cut @cp  @pst caps -    1    2    3    .    _
  _    _    _              _              _    _    _    _
)

(defalias
  rw rewind
  ff fastforward
  gam (layer-switch gaming)

  pre (tap-hold-next-release 200 prev lmet)
  pp (tap-hold-next-release 200 pp lctl)
  nxt (tap-hold-next-release 200 next lalt)

  f4 (tap-hold-next-release 200 f4 lalt)
  f5 (tap-hold-next-release 200 f5 rctl)
  f6 (tap-hold-next-release 200 f6 rmet)
)

(deflayer medfn
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    @rw  volu @ff  brup ins  f7   f8   f9   f10  _    _    _
  _    _    @pre @pp  @nxt brdn @gam @f4  @f5  @f6  f11  _    _
  _    _    mute vold stop _    slck f1   f2   f3   f12  _
  _    _    _              _              _    _    _    _
)


(defalias
  col (layer-switch colemak-dh)
)

(deflayer gaming
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  tab  q    w    e    r    t    _    _    up   _    _    _    _    _
  lsft a    s    d    f    g    @col lft  down rght _    _    _
  lctl z    x    c    v    b    _    _    _    _    _    _
  _    lalt esc            spc            _    _    _    _
)

(deflayer empty
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _              _              _    _    _    _
)