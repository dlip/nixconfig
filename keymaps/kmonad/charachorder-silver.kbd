;; Minimal charachorder remap using only silver keys

(defcfg
  ;; ** For Linux **
  input  (device-file "/dev/input/by-id/usb-CharaChorder_CharaChorder_1_A21D040450583234352E3120FF070B2A-if02-event-kbd")
  output (uinput-sink "KMonad charachorder output")

  ;; ** For Windows **
  ;; input  (low-level-hook)
  ;; output (send-event-sink)

  ;; ** For MacOS **
  ;; input  (iokit-name "my-keyboard-product-string")
  ;; output (kext)

  fallthrough true
)

(defsrc
;; base
          lalt        lctl     del      bspc    #|_|#   ret         tab      rctl        ralt
#|numshift|#  lsft   ,   '   .   i    spc  r    #|_|#  a  #|spc|#  l   j     y   ;   rshift  #|numshift|#
        #|mirror|#     u        o        e      #|_|#    t           n         s       #|mirror|#
                                                #|_|#
                                         v      #|_|#    p
                                       m   k    #|_|#  f   h
                                         c      #|_|#    d
                                                #|_|#
                                      #|na|#    #|_|#      x
                                      g   w     #|_|#    b  #|dup|#
                                        z       #|_|#      q
)

(defalias
  na reserved
  nav (layer-toggle nav)
  num (layer-toggle num)

  ret_ctl (tap-hold-next-release 200 ret rctl)
  bspc_ctl (tap-hold-next-release 200 bspc lctl)
  esc_win (tap-hold-next-release 200 esc lmet)
  tab_win (tap-hold-next-release 200 tab lmet)
  v_alt (tap-hold-next-release 200 v lalt)
  p_alt (tap-hold-next-release 200 p ralt)
)

(deflayer remap
;; base
          lsft       @num   @esc_win  @bspc_ctl #|_|#  @ret_ctl   @tab_win   @nav       rsft
#|numshift|#  `     ,   '    .   i    spc  r    #|_|#  a  #|spc|#  l   j    y    ;      /  #|numshift|#
        #|mirror|#     u        o        e      #|_|#    t           n         s       #|mirror|#
                                                #|_|#
                                       @v_alt   #|_|#  @p_alt
                                       m   k    #|_|#  f   h
                                         c      #|_|#    d
                                                #|_|#
                                      #|na|#    #|_|#      x
                                      g   w     #|_|#    b  #|dup|#
                                        z       #|_|#      q
)


(deflayer nav
;; base
          _          _       esc       up       #|_|#   rctl         rmet      @nav       _
#|numshift|#  _     _  _  del _    left right   #|_|#  _  #|spc|#  _   _    _    _    _  #|numshift|#
        #|mirror|#   _      prnt     down       #|_|#    _           _         _       #|mirror|#
                                                #|_|#
                                       pgup     #|_|#  ralt
                                     home end   #|_|#  _   _
                                        pgdn    #|_|#    _
                                                #|_|#
                                      #|na|#    #|_|#      _
                                      g   w     #|_|#    _  #|dup|#
                                        z       #|_|#      _
)

(deflayer num
;; base
          lsft        @num     lmet     lctl    #|_|#    [           ]         {        rsft
#|numshift|#  lalt  lmet  ,   ;   i    3    r   #|_|#  1  #|3|#    4   6     <    >    ralt  #|numshift|#
        #|mirror|#     u        o        e      #|_|#    2           5         s         #|mirror|#
                                                #|_|#
                                       lalt     #|_|#    8
                                       m   k    #|_|#  7   9
                                         c      #|_|#    0
                                                #|_|#
                                      #|na|#    #|_|#      =
                                      g   w     #|_|#    \  #|dup|#
                                        z       #|_|#      -
)
