(defsrc
  esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt muhenkan  spc  henkan ralt prtsc katakanahiragana rctl cmp
)
(defvar
  tap-timeout 0
  hold-timeout 200
)

(defalias
  rpt rpt-any
  na (layer-switch base)
  med (one-shot 1000 (layer-toggle media))
  nav (one-shot 1000 (layer-toggle nav))
  num (one-shot 1000 (layer-toggle num))

  c (tap-hold $tap-timeout $hold-timeout c @med)
  r (tap-hold $tap-timeout $hold-timeout r lalt)
  s (tap-hold $tap-timeout $hold-timeout s lmet)
  t (tap-hold $tap-timeout $hold-timeout t lctl)

  n (tap-hold $tap-timeout $hold-timeout n rctl)
  e (tap-hold $tap-timeout $hold-timeout e rmet)
  i (tap-hold $tap-timeout $hold-timeout i lalt)
  a (tap-hold $tap-timeout $hold-timeout a @med)

  lft (tap-hold $tap-timeout $hold-timeout left lalt)
  dwn (tap-hold $tap-timeout $hold-timeout down lmet)
  rgt (tap-hold $tap-timeout $hold-timeout rght lctl)

  esc (tap-hold $tap-timeout $hold-timeout esc lalt)
  bsp (tap-hold $tap-timeout $hold-timeout bspc lmet)
  g (tap-hold $tap-timeout $hold-timeout g lctl)
  m (tap-hold $tap-timeout $hold-timeout m lctl)

  4 (tap-hold $tap-timeout $hold-timeout 4 rctl)
  5 (tap-hold $tap-timeout $hold-timeout 5 rmet)
  6 (tap-hold $tap-timeout $hold-timeout 6 lalt)
  0 (tap-hold $tap-timeout $hold-timeout 0 @med)

  q (tap-hold $tap-timeout $hold-timeout z C-z)
  j (tap-hold $tap-timeout $hold-timeout x C-x)
  v (tap-hold $tap-timeout $hold-timeout c C-c)
  d (tap-hold $tap-timeout $hold-timeout d C-v)

  spc (tap-hold $tap-timeout $hold-timeout spc lsft)
  cpy C-c
  pst C-v
  cut C-x
  udo C-z
  all C-a
)

(deflayer base
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  w    l    y    p    XX   XX   XX   XX   f    o    u    '    _    _
  @c   @r   @s   @t   XX   XX   XX   XX   @n   @e   @i   @a   _
  q    j    v    d    XX   XX   XX   XX   h    ;    ,    .
  _    lrld @num @num      @spc      @nav @nav bspc bspc @rpt bspc
)

(deflayer num
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  `    del  ret  b    _    _    _    _    7    8    9    /    _    _
  tab  @esc @bsp @g   _    _    _    _    @4   @5   @6   @0   _
  \    -    =    k    _    _    _    _    1    2    3    .
  _    _    _    _         _         _    _    _    _    _    _
)

(deflayer nav
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  `    [    up   ]    _    _    _    _    z    ret  del  _    _    _
  tab  @lft @dwn @rgt _    _    _    _    @m   @bsp @esc tab  _
  home pgup pgdn end  _    _    _    _    x    _    _    _
  _    _    _    _         _         _    _    _    _    _    _
)

(deflayer media
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  @gam vold prnt volu _    _    _    _    f7   f8   f9   f10  _    _
  prnt prev pp   next _    _    _    _    f4   f5   f6   f11  _
  @udo @cut @cpy @pst _    _    _    _    f1   f2   f3   f12
  _    _    _   _          _         _    _    _    _    _    _
)

(defalias
  pau pause
  gam (layer-switch gaming)
)

(defalias
  bse (layer-switch base)
)

(deflayer gaming
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  tab  q    w    e    r    t    _    _    _    up   _    _    _    _
  lsft a    s    d    f    g    _    @bse lft  down rght _    _
  lctl z    x    c    v    b    _    _    _    _    _    _
  _    lalt esc  _         spc       _    _    _    _    _    _
)

(deflayer empty
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _         _         _    _    _    _    _    _
)
